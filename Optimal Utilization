'''

Given 2 lists a and b. Each element is a pair of integers where the first integer represents the unique
 id and the second integer represents a value. Your task is to find an element from a and an element form b
  such that the sum of their values is less or equal to target and as close to target as possible. Return a
  list of ids of selected elements. If no pair is possible, return an empty list.

Input:
a = [[1, 2], [2, 4], [3, 6]]
b = [[1, 2]]
target = 7

Output: [[2, 1]]

Explanation:
There are only three combinations [1, 1], [2, 1], and [3, 1], which have a total sum of 4, 6 and 8, respectively.
Since 6 is the largest sum that does not exceed 7, [2, 1] is the optimal pair.
  '''

# binary search to find the floor value of target
def fun(arr, target):
    ans = -1;
    # initliaze low and high
    low, high = 0, len(arr)- 1;
    while( low <= high):
        # fidn the middle value
        mid = low + (high - low)//2;
        # compare the middle value and target, if middle value is less
        # it could be one of the answers
        # to make it tight, move to the right array
        # else move to the left array
        if( arr[mid][1] <= target):
            ans = mid;
            low = mid + 1;
        else:
            high = mid - 1;
    return ans;

def findpairs(a, b, target):
    result = []
    # sort the a array based on second attribute
    a = sorted(a, key = lambda x:x[1]);
    mindiff = float('inf')
    # scan through array b
    for i in range(len(b)):
        idx1, elt1 = b[i];
        # search for target - elt1 floor value in the a array
        elt2idx = fun(a, target - elt1);
        idx2, elt2 = a[elt2idx]
        # if floor value is found,
        if(elt2idx != -1):
            # compare the differences and update the result
            if(target - (elt1 + elt2) < mindiff):
                result = [[idx1, idx2]];
                mindiff = target - (elt1 + elt2);
            elif(target -(elt1 + elt2) == mindiff):
                result.append([idx1, idx2]);
    return result;

a = [[1, 3], [2, 5], [3, 7], [4, 10]]
b = [[1, 2], [2, 3], [3, 4], [4, 5]]
target = 10
print(findpairs(a, b, target))



