// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this :

// Brute force method
class Solution {
    public int hIndex(int[] citations) {
        if(citations == null || citations.length == 0) return 0;
        int n = citations.length;
        for(int i=0; i< citations.length; i++){
            int diff = n - i;
            if(citations[i] >= diff){
                return diff;
            }
        }
        return 0;
    }
}

// **********************************
// Time Complexity : O(log n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this :

// Binary search method
class Solution {
    public int hIndex(int[] citations) {
        if(citations == null || citations.length == 0) return 0;
        int n = citations.length;
        int low=0; int high = n-1;
        
        while(low <= high){
            int mid = low + (high-low)/2;
            if(citations[mid] == n-mid){
                return n-mid;
            }else if(citations[mid] > n-mid){
                high = mid - 1;
            } else{
                low = mid + 1;
            }
        }
        return n-low;
    }
}

